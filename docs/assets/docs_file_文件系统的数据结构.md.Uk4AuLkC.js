import{_ as e,o as a,c as i,R as t}from"./chunks/framework.jG2La8vi.js";const o="/doc/assets/文件.aScZtyE2.png",u=JSON.parse('{"title":"文件系统的数据结构","description":"","frontmatter":{},"headers":[],"relativePath":"docs/file/文件系统的数据结构.md","filePath":"docs/file/文件系统的数据结构.md"}'),l={name:"docs/file/文件系统的数据结构.md"},n=t('<h1 id="文件系统的数据结构" tabindex="-1">文件系统的数据结构 <a class="header-anchor" href="#文件系统的数据结构" aria-label="Permalink to &quot;文件系统的数据结构&quot;">​</a></h1><p>下面图片引自知乎<a href="https://zhuanlan.zhihu.com/p/655508477" target="_blank" rel="noreferrer">文件系统-inode</a> , 侵删 <img src="'+o+'" data-fancybox="gallery"></p><ul><li><p>引导块：通常位于文件系统的开始位置，包含了启动文件系统所需的引导加载程序。</p></li><li><p>超级块：存储了文件系统的整体信息，如块大小、inode数量、块数量、空闲块和inode的数量等。</p></li><li><p>块组描述符：在某些文件系统（如ext系列）中，描述了块组的状态，如空闲块的数量、空闲inode的数量等。</p></li><li><p>块位图（block bitmap）：表示哪些数据块是已使用的，哪些是空闲的。</p></li><li><p>inode位图（inode bitmap）：表示哪些inode是已使用的，哪些是空闲的。</p></li><li><p>inode表 (inode table)：包含了文件系统中所有文件的inode信息，每个inode对应一个文件或目录。</p></li><li><p>数据块（datablock）：实际存储文件数据的区域。</p></li></ul>',3),_=[n];function r(d,p,s,c,h,f){return a(),i("div",null,_)}const b=e(l,[["render",r]]);export{u as __pageData,b as default};
