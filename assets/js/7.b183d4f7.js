(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{378:function(t,e,v){t.exports=v.p+"assets/img/ynet.8b58c3bc.png"},379:function(t,e,v){t.exports=v.p+"assets/img/ynet1.54f5bc96.png"},396:function(t,e,v){"use strict";v.r(e);var _=v(51),i=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"关于ynet-h5平台"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于ynet-h5平台"}},[t._v("#")]),t._v(" 关于YNET-H5平台")]),t._v(" "),_("h2",{attrs:{id:"平台架构设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#平台架构设计"}},[t._v("#")]),t._v(" 平台架构设计")]),t._v(" "),_("p",[t._v("平台采用VUE2.0作为视图渲染，在VUE2.0基础上做了二次封装，内置提供了路由、请求、缓存、日志等基础平台功能。平台完全遵循组装式开发思路，将功能已插件模式提供，业务开发人员可根据自身项目需求进行按需引用组装。对于组件于平台强依赖的功能，例如：请求、缓存等功能，平台遵循面向接口开发，内部操作接口API，接口实现类由插件实现，业务开发按需选择注入功能实现类。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(378),alt:"ynet"}})]),t._v(" "),_("p",[t._v("目前平台提供以下场景下的终端项目开发：")]),t._v(" "),_("ul",[_("li",[t._v("wap页面")]),t._v(" "),_("li",[t._v("微信公众号")]),t._v(" "),_("li",[t._v("PC端网页项目")]),t._v(" "),_("li",[t._v("APP混合开发模式下的H5项目")])]),t._v(" "),_("h3",{attrs:{id:"采用vue2-0作为视图引擎"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#采用vue2-0作为视图引擎"}},[t._v("#")]),t._v(" 采用VUE2.0作为视图引擎")]),t._v(" "),_("p",[t._v("采用 VUE2.0 作为底层视图处理核心引擎，因为 2.0 是目前最稳定版本，经过市场验证，Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能实现的 ECMAScript 5 特性。 Vue.js 支持所有[兼容 ECMAScript 5 的浏览器]")]),t._v(" "),_("h3",{attrs:{id:"h5平台与业务低耦合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#h5平台与业务低耦合"}},[t._v("#")]),t._v(" H5平台与业务低耦合")]),t._v(" "),_("p",[t._v("平台代码独立项目维护，并对外提供差异化特色配置。各渠道依赖同一个H5平台代码，在平台之上做特色化业务开发，充分保证业务的自由化配置，同时平台框架也会提供统一的公共逻辑，以此实现平台的不断迭代完善。")]),t._v(" "),_("h3",{attrs:{id:"多端大前端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多端大前端"}},[t._v("#")]),t._v(" 多端大前端")]),t._v(" "),_("p",[t._v("平台提供大前端框架，统一技术开发规范，提供各端下的UI组件、JSAPI命令，减少学习成本，提高工作效率和模块代码复用性。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(379),alt:"./"}})]),t._v(" "),_("ul",[_("li",[t._v("支持多端开发，尽可能抹平多端差异")]),t._v(" "),_("li",[t._v("为不同平台提供丰富的UI组件库")]),t._v(" "),_("li",[t._v("提供统一的JSAPI操作规范，对外提供统一接口")]),t._v(" "),_("li",[t._v("针对不同平台提供差异化打包模式配置")])]),t._v(" "),_("p",[t._v("平台采用“组装式”开发设计，所有功能已插件/组件方式对外输出，项目在搭建时，根据需要的功能自由选择组装。\n目前平台规划设计的类库有（共16个类库，不含单元测试、不含三方库等）：")]),t._v(" "),_("ul",[_("li",[t._v("ynet-babel-plugin-chunkname: 对异步加载进行魔法注释自动输出")]),t._v(" "),_("li",[t._v("ynet-if-loader:  打包时提供魔法动态分支，一般使用在多环境配置文件，多环境代码块生效等")]),t._v(" "),_("li",[t._v("ynet-cli : 提供各种命令集合“ynet”，可实现多环境多场景的构建，服务启动等等")]),t._v(" "),_("li",[t._v("ynet-core: 核心库，内部包含视图、路由、缓存、IOC依赖容器、请求等等核心能力")]),t._v(" "),_("li",[t._v("ynet-local-storage: 持久化缓存H5实现模式，接口在core核心库")]),t._v(" "),_("li",[t._v("ynet-session-storage: 会话数据，H5模式")]),t._v(" "),_("li",[t._v("ynet-session-window: 会话数据，全局变量模式，一般作为sessionStorage的兜底方案")]),t._v(" "),_("li",[t._v("ynet-pxrem-loader: 提供px转换rem能力，构建时自动化处理")]),t._v(" "),_("li",[t._v("ynet-request-axios : 请求方式-ajax，一般用作PC、WAP和app原生中开发调试")]),t._v(" "),_("li",[t._v("ynet-request-mock: 请求方式-虚拟报文，一般用作前期开发无接口时的虚拟数据处理，或者某些项目的演示版数据代理")]),t._v(" "),_("li",[t._v("ynet-vconsole-pugin : APP/WAP运行时的调试工具")]),t._v(" "),_("li",[t._v("ynet-iox-fix : 解决了IOS的诸多兼容场景输出（可选），例如：键盘弹出")]),t._v(" "),_("li",[t._v("ynet-split-legal:  多法人机制，如果没有多法人可不引用")]),t._v(" "),_("li",[t._v("ynet-ui : UI库多端核心库，提供表单、校验等多端通用能力")]),t._v(" "),_("li",[t._v("ynet-utils : 提供通用方法，时间、金额等处理方法，并且提供场景的过滤器")]),t._v(" "),_("li",[t._v("ynet-filter: 提供通用方法，时间、金额等全局过滤器")]),t._v(" "),_("li",[t._v("ynet-validate: 提供通用手机号、账号等校验器")]),t._v(" "),_("li",[t._v("ynet-reinforce: 安全加固库，提供防调试功能配置，加固复杂度配置。")]),t._v(" "),_("li",[t._v("ynet-i18n: 多语言支持库")])]),t._v(" "),_("blockquote",[_("p",[t._v("详细组件介绍，请查看插件说明")])])])}),[],!1,null,null,null);e.default=i.exports}}]);